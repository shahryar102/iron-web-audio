{"version":3,"sources":["AudioVisualiser.js","AudioAnalyser.js","App.js","registerServiceWorker.js","index.js"],"names":["AudioVisualiser","props","canvas","React","createRef","width","height","ref","this","audioData","current","context","getContext","x","sliceWidth","length","lineWidth","strokeStyle","clearRect","beginPath","moveTo","y","lineTo","stroke","draw","Component","AudioAnalyser","state","Uint8Array","dataStreem","tick","bind","audioContext","window","AudioContext","webkitAudioContext","analyser","createAnalyser","dataArray","frequencyBinCount","source","createMediaStreamSource","audio","connect","rafId","requestAnimationFrame","newDataStreem","push","setState","getByteTimeDomainData","console","log","axios","post","slice","then","response","data","cancelAnimationFrame","disconnect","App","shouldIshowGallery","showGallery","buttonOn","gallery","map","eachItem","i","url","className","key","src","onClick","delete","index","newGallery","splice","toggleMicrophone","stopMicrophone","getMicrophone","postApi","clearApi","fileSelectHandler","event","selectedFile","target","files","checkUploadResult","resultEvent","info","_id","public_id","showWidget","widget","open","cameraOn","camera","get","dataUri","navigator","mediaDevices","getUserMedia","video","getTracks","forEach","track","stop","cloudinary","createUploadWidget","cloudName","uploadPreset","error","result","id","onTakePhoto","send","sendDataHandler","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.44f46b32.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass AudioVisualiser extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n  }\n  render() {\n    return <canvas width=\"300\" height=\"300\" ref={this.canvas} />;\n  }\n\n  draw() {\n    const { audioData } = this.props;\n    const canvas = this.canvas.current;\n    const height = canvas.height;\n    const width = canvas.width;\n    const context = canvas.getContext(\"2d\");\n\n    let x = 0;\n    const sliceWidth = (width * 1.0) / audioData.length;\n    context.lineWidth = 2;\n    context.strokeStyle = \"#000000\";\n    context.clearRect(0, 0, width, height);\n    context.beginPath();\n    context.moveTo(0, height / 2);\n\n    for (const item of audioData) {\n      const y = (item / 255.0) * height;\n      context.lineTo(x, y);\n      x += sliceWidth;\n    }\n    context.lineTo(x, height / 2);\n    context.stroke();\n  }\n  componentDidUpdate() {\n    this.draw();\n  }\n}\n\nexport default AudioVisualiser;\n","import React, { Component } from \"react\";\nimport AudioVisualiser from \"./AudioVisualiser\";\nimport axios from 'axios';\n\n\nclass AudioAnalyser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n    \n      audioData: new Uint8Array(0),\n      dataStreem: []\n    };\n    this.tick = this.tick.bind(this);\n  }\n  componentDidMount() {\n    this.audioContext = new (window.AudioContext ||\n      window.webkitAudioContext)();\n    this.analyser = this.audioContext.createAnalyser();\n    this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\n    this.source = this.audioContext.createMediaStreamSource(this.props.audio);\n    this.source.connect(this.analyser);\n    this.rafId = requestAnimationFrame(this.tick);\n  }\n  tick() {\n    let newDataStreem = [...this.state.dataStreem];\n    newDataStreem.push(this.dataArray)\n    this.setState({\n      dataStreem: newDataStreem\n    })\n    this.analyser.getByteTimeDomainData(this.dataArray);\n    this.setState({ audioData: this.dataArray });\n    this.rafId = requestAnimationFrame(this.tick);\n    console.log(this.state.dataStreem)\n  }\n  componentWillUnmount() {\n    axios.post(\"https://ironrest.herokuapp.com/shahriyar\", {audio: this.state.dataStreem.slice(0,10)})\n      .then(response => {\n        console.log(response.data)\n      })\n    cancelAnimationFrame(this.rafId);\n    this.analyser.disconnect();\n    this.source.disconnect();\n  }\n  \n  render() {\n    return <AudioVisualiser audioData={this.state.audioData} />;\n    \n  }\n}\n\nexport default AudioAnalyser;\n","import React, { Component } from \"react\";\nimport AudioAnalyser from \"./AudioAnalyser\";\nimport axios from \"axios\";\nimport { restElement } from \"@babel/types\";\nimport { Switch, Link, Route } from \"react-router-dom\";\nimport Camera from \"react-html5-camera-photo\";\nimport \"react-html5-camera-photo/build/css/index.css\";\nimport Recorder from \"react-mp3-recorder\";\nimport \"./App.css\";\nimport \"./buttons.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showGallery: false,\n      audio: null,\n      selectedFile: null,\n      camera: false,\n      gallery: [],\n      buttonOn: false\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://ironrest.herokuapp.com/shahriyar\").then(data => {\n      console.log(data);\n      console.log(data.data);\n      // console.log(data.data[0].url);\n      this.setState({ gallery: data.data });\n    });\n  }\n\n  shouldIshowGallery = () => {\n    this.setState({\n      showGallery: !this.state.showGallery,\n      buttonOn: !this.state.buttonOn\n    });\n  };\n\n  showGallery = () => {\n    console.log(this.state.gallery);\n\n    if (this.state.showGallery) {\n      console.log(this.state.gallery);\n      return this.state.gallery.map((eachItem, i) => {\n        console.log(eachItem.url);\n        return (\n          <div className=\"gallery\" key={i}>\n            <h2>Captured from ironrest #{i + 1}</h2>\n            <img src={eachItem.url} width=\"800px\" height=\"800px\" />\n            <button onClick={() => this.delete(i)}>Delete</button>\n          </div>\n        );\n      });\n    } else {\n      return <></>;\n    }\n  };\n  delete = index => {\n    let newGallery = [...this.state.gallery];\n    newGallery.splice(index, 1);\n    this.setState({ gallery: newGallery });\n  };\n\n  onTakePhoto(dataUri) {\n    // Do stuff with the dataUri photo...\n    console.log(\"takePhoto\");\n  }\n\n  async getMicrophone() {\n    const audio = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: false\n    });\n    this.setState({ audio });\n  }\n\n  stopMicrophone() {\n    this.state.audio.getTracks().forEach(track => track.stop());\n    this.setState({ audio: null });\n  }\n\n  toggleMicrophone = () => {\n    if (this.state.audio) {\n      // console.log(this.state.audio)\n      this.stopMicrophone();\n    } else {\n      this.getMicrophone();\n    }\n  };\n\n  //sendDataHandler = data => {};\n\n  postApi = x => {\n    console.log(\"this is posting function\");\n    axios\n      .post(\"https://ironrest.herokuapp.com/shahriyar\", { url: x })\n      .then(data => {\n        console.log(data);\n      });\n  };\n  clearApi = () => {\n    console.log(\"this is the clear function\");\n    axios\n      .delete(\"https://ironrest.herokuapp.com/deleteCollection/shahriyar\")\n      .then(data => {});\n  };\n\n  fileSelectHandler = event => {\n    this.setState({\n      selectedFile: event.target.files[0]\n    });\n  };\n\n  checkUploadResult = resultEvent => {\n    if (resultEvent.event === \"success\") {\n      console.log(resultEvent, resultEvent.info.url);\n      this.postApi(resultEvent.info.url);\n      let newGallery = [...this.state.gallery];\n    newGallery.push({_id:resultEvent.info.public_id,url:resultEvent.info.url})\n    this.setState({ gallery: newGallery });\n      \n    }\n  };\n\n  showWidget = widget => {\n    widget.open();\n  };\n  cameraOn = () => {\n    this.state.camera\n      ? this.setState({ camera: false })\n      : this.setState({ camera: true });\n  };\n\n  render() {\n    let widget = window.cloudinary.createUploadWidget(\n      {\n        cloudName: \"dgtmzbsms\",\n        uploadPreset: \"shahriyar\"\n      },\n      (error, result) => {\n        this.checkUploadResult(result);\n      }\n    );\n    return (\n      <div className=\"App\">\n        <main className=\"app-main\">\n          <div className=\"controls\">\n            <button className=\"buttons\" onClick={this.toggleMicrophone}>\n              {this.state.audio\n                ? \"Stop microphone\"\n                : \"Turn on Graphic Microphone\"}\n            </button>\n          </div>\n\n          <div>\n            <button\n              className={this.state.buttonOn ? \"buttonOn\" : \"buttonOff\"}\n              onClick={this.shouldIshowGallery}\n            >\n              {this.state.showGallery ? \"Hide Gallery\" : \"Show Gallery\"}\n            </button>\n          </div>\n          <button className=\"buttons\" onClick={this.clearApi}>\n            Clear iron-rest API\n          </button>\n\n          <div id=\"photo-from-container\">\n            <button className=\"buttons\" onClick={() => widget.open()}>\n              Upload File to Cloudinary\n            </button>\n          </div>\n\n          {/* <Recorder\n        onRecordingComplete={this._onRecordingComplete}\n        onRecordingError={this._onRecordingError}\n      /> */}\n\n          <button className=\"buttons\" onClick={this.cameraOn}>\n            {this.state.camera\n              ? \"Turn off React Camera\"\n              : \"Turn on React Camera\"}\n          </button>\n        </main>\n        <div className=\"content\">\n          {this.state.camera ? (\n            <Camera\n              onTakePhoto={dataUri => {\n                this.onTakePhoto(dataUri);\n              }}\n            />\n          ) : null}\n          {this.state.audio && (\n            <AudioAnalyser\n              audio={this.state.audio}\n              send={this.sendDataHandler}\n            />\n          )}\n          {this.showGallery()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}